// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model Profile {
  id           String   @id @default(uuid())
  clerkId      String   @unique
  firstName    String
  lastName     String
  username     String
  email        String
  profileImage String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  records      Record[]
}

// model User {
//   id        Int      @id @default(autoincrement())
//   userName  String @db.VarChar(50)
//   accessType  String @db.VarChar(50)
//   site  String @db.VarChar(50)
//   organization String @db.VarChar(100)
//   email String @db.VarChar(50)
//   userContact String @db.VarChar(50)
//   firstname String   @db.VarChar(50)
//   lastname  String   @db.VarChar(50)
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   Record    Record[]
// }

model Site {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(50)
}

model Location {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(50)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Record    Record[]
}

model Owner {
  id        Int      @id @default(autoincrement())
  ownername String   @db.VarChar(25)
  ownerlong  String  @db.VarChar(50)
  status    String   @db.VarChar(10)
  contact   String   @db.VarChar(50)
  Record    Record[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Box {
  id        Int      @id @default(autoincrement())
  boxNumber Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  // Record    Record[]
  Record    Record[]
}

model Record {
  id          Int       @id @default(autoincrement())
  site        String    @default("CITY HALL")
  userId      Int
  locationId  Int
  location    Location  @relation(fields: [locationId], references: [id])
  ownerId     Int
  owner       Owner     @relation(fields: [ownerId], references: [id])
  boxId       Int
  box         Box       @relation(fields: [boxId], references: [id])
  status      String    @default("ACTIVE")
  disposition String    @default("ACTIVE")
  retention   Int      @db.SmallInt
  content     String?   @db.Text
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  reviewDate  DateTime  @db.DateTime
  deleteDate  DateTime? @db.DateTime
  profile     Profile   @relation(fields: [profileId], references: [clerkId], onDelete: Cascade)
  profileId   String
}


model Preference {
  id          Int       @id @default(autoincrement())
  itemValue   Int
  itemDefault Int
  itemType    String  @db.VarChar(20)
  authLevel   String  @db.VarChar(20)

}

// enum Status {
//   ACTIVE
//   DELETED
// }

// enum Disposition {
//   ACTIVE
//   SCANNED
//   TRANSFERRED
//   DESTROYED
//   REPOSSESSED
// }
